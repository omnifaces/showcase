<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="jakarta.faces.html"
    xmlns:ui="jakarta.faces.facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:os="http://omnifaces.org/showcase"
>
    <h2 id="4_6_2">What's new in OmniFaces 4.6.2?</h2>
    <p><em>Release date: 26 April, 2025</em></p>

    <h3>Changed in OmniFaces 4.6.2</h3>
    <ul>
        <li><os:githubLink issue="885" /><h:link outcome="/utils/Faces"><code>Faces(Local)#getBundleString()</code></h:link> now accepts varargs with <code>MessageFormat</code> params</li>
    </ul>

    <h3>Fixed in OmniFaces 4.6.2</h3>
    <ul>
        <li><os:githubLink issue="891" /><h:link outcome="/resourcehandlers/PWAResourceHandler">PWA's <code>sw.js</code></h:link> won't anymore check external resources such as Google Analytics as that would otherwise result in potential CORS errors for nothing</li>
        <li><os:githubLink issue="892" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> threw since 4.6 <code>ClassCastException</code> when converter ID was used instead of converter class (worked in 4.5.1 and before)</li>
        <li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_3_14_8');return false;">Remaining fixes are same as in 3.14.8</a></li>
    </ul>

    <hr />

    <h2 id="4_6_1">What's new in OmniFaces 4.6.1?</h2>
    <p><em>Release date: 8 February, 2025</em></p>

    <h3>Fixed in OmniFaces 4.6.1</h3>
    <ul>
        <li><os:githubLink issue="887" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> improved fix of issue 823 of 4.5 release</li>
    </ul>

    <hr />

    <h2 id="4_6">What's new in OmniFaces 4.6?</h2>
    <p><em>Release date: 24 November, 2024</em></p>

    <h3>Added in OmniFaces 4.6</h3>
    <ul>
        <li><os:githubLink commit="c3c841f" /><h:link outcome="/utils/Ajax"><code>Ajax</code></h:link> has been split into <code>Ajax</code> and <code>AjaxLocal</code></li>
        <li><os:githubLink issue="849" /><h:link outcome="/utils/Components"><code>Components</code></h:link> has been split into <code>Components</code> and <code>ComponentsLocal</code></li>
        <li><os:githubLink issue="864" /><h:link outcome="/taghandlers/importConstants"><code>&lt;o:importConstants&gt;</code></h:link>: when importing an <code>enum</code>, you will now be able to use <code>\#{EnumClass.members()}</code> instead of <code>\#{EnumClass.values()}</code> in case you wish to exclusively access enum members rather than all constant field values</li>
    </ul>

    <h3>Changed in OmniFaces 4.6</h3>
    <ul>
        <li><os:githubLink commit="02f87b9" /><code>org.omnifaces.util.Callback</code> (originally designed for Java 1.7!) has been deprecated in favor of the <code>org.omnifaces.util.FunctionalInterfaces</code> wherein the callback interfaces follow the same naming conventions as Java 8 ones</li>
        <li><os:githubLink issue="867" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> the close reason <code>GOING_AWAY</code> was previously suppressed in logging, but now it will be logged as <code>FINE</code></li>
    </ul>

    <h3>Fixed in OmniFaces 4.6</h3>
    <ul>
        <li><os:githubLink issue="862" />Fix <code>ClassNotFoundException</code>code> during startup when a <code>web.xml</code> entry representing a class contains a XML comment</li>
        <li><os:githubLink issue="790" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> should not auto-register the <h:link outcome="/filters/FacesExceptionFilter"><code>FacesExceptionFilter</code></h:link> when a custom one is already registered</li>
        <li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_3_14_7');return false;">Remaining fixes are same as in 3.14.7</a></li>
    </ul>

    <hr />

    <h2 id="4_5_1">What's new in OmniFaces 4.5.1?</h2>
    <p><em>Release date: 2 September, 2024</em></p>

    <h3>Fixed in OmniFaces 4.5.1</h3>
    <ul>
        <li><os:githubLink issue="831" />Deployment failed in Quarkus due to <h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> change in 4.5</li>
    </ul>

    <hr />

    <h2 id="4_5">What's new in OmniFaces 4.5?</h2>
    <p><em>Release date: 31 August, 2024</em></p>

    <h3>Added in OmniFaces 4.5</h3>
    <ul>
        <li><os:githubLink issue="798" />Added <h:link outcome="/utils/Components"><code>Components#setAttribute()</code></h:link> and <h:link outcome="/utils/Components"><code>Components#disableInput()</code></h:link> utility methods</li>
        <li><os:githubLink issue="790" /><h:link outcome="/utils/FacesConfigXml"><code>FacesConfigXml#getExceptionHandlerFactories()</code></h:link> helper method has been added to collect all so far declared exception handler factories</li>
        <li><os:githubLink issue="799" /><h:link outcome="/resourcehandlers/PWAResourceHandler"><code>PWAResourceHandler</code></h:link>: added new <code>WebAppManifest#getScreenshots()</code> and <code>WebAppManifest#getShortcuts()</code> properties as per changes in w3 spec</li>
        <li><os:githubLink issue="633" />Added tags for all OmniFaces converters and validators; so e.g. <h:link outcome="/converters/SelectItemsConverter"><code>omnifaces.SelectItemsConverter</code></h:link> is now also available as <code>&lt;o:selectItemsConverter&gt;</code></li>
        <li><os:githubLink issue="797" /><h:link outcome="/components/criticalStylesheet"><code>&lt;o:criticalStylesheet&gt;</code></h:link> which extends the standard <code>&lt;h:outputStylesheet&gt;</code> with default rendering of <code>&lt;link rel="preload" as="style"&gt;</code> attributes which automatically to <code>rel="stylesheet"</code> during window load event and is automatically moved to very top of the head and is also treated separately from default CSS resources when using <code>CombinedResourceHandler</code></li>
        <li><os:githubLink issue="822" /><h:link outcome="/components/link"><code>&lt;o:link&gt;</code></h:link> which extends the standard <code>&lt;h:link&gt;</code> and allows including the request query string parameters of the current URL into the link's target URL</li>
        <li><os:githubLink issue="824" /><h:link outcome="/cdi/Param"><code>@Param</code></h:link> can now be instructed to set any faces message as a global message via the new attribute <code>@Param(globalMessage=true)</code></li>
    </ul>

    <h3>Changed in OmniFaces 4.5</h3>
    <ul>
        <li><os:githubLink issue="814" /><h:link outcome="/resourcehandlers/PWAResourceHandler"><code>PWAResourceHandler</code></h:link>: <code>WebAppManifest#getOrientation()</code> now returns <code>null</code> as default value instead of <code>ANY</code></li>
        <li><os:githubLink issue="790" /><h:link outcome="/exceptionhandlers/FullAjaxExceptionHandler"><code>FullAjaxExceptionHandler</code></h:link> will now auto-register the <h:link outcome="/filters/FacesExceptionFilter"><code>FacesExceptionFilter</code></h:link> so there's no need anymore to explicitly register it in <code>web.xml</code></li>
        <li><os:githubLink issue="821" /><code>GzipResponseFilter</code> has been renamed to <h:link outcome="/filters/CompressedResponseFilter"><code>CompressedResponseFilter</code></h:link> and got additional support for Brotli and Deflate compression algorithms next to Gzip</li>
        <li><os:githubLink issue="663" /><h:link outcome="/utils/Faces"><code>Faces#hasSessionTimedOut()</code></h:link> has been deprecated because the in 3.13 added <code>Faces#isRequestedSessionExpired()</code> does basically exactly the same</li>
    </ul>

    <h3>Fixed in OmniFaces 4.5</h3>
    <ul>
        <li><os:githubLink issue="823" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> corner case threadsafety bug has been fixed (won't happen in normal production environment with standard web browsers, but only in unit test environment when bean is programmatically accessed by parallel threads)</li>
        <li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_3_14_6');return false;">Remaining fixes are same as in 3.14.6</a></li>
    </ul>

    <hr />

    <h2 id="4_4_1">What's new in OmniFaces 4.4.1?</h2>
    <p><em>Release date: 5 May, 2024</em></p>

    <h3>Fixed in OmniFaces 4.4.1</h3>
    <ul>
        <li><os:githubLink issue="803" />The in 4.4 introduced <code>LruCache</code>, used by <h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> and <h:link outcome="/components/cache"><code>&lt;o:cache&gt;</code></h:link>, threw NPE when server is restarted with session persistence</li>
    </ul>

    <hr />

    <h2 id="4_4">What's new in OmniFaces 4.4?</h2>
    <p><em>Release date: 14 April, 2024</em></p>

    <h3>Added in OmniFaces 4.4</h3>
    <ul>
        <li><os:githubLink issue="787" />Added <h:link outcome="/utils/Components"><code>Components#createComponent()</code></h:link> utility methods to reduce boilerplate when creating components</li>
    </ul>

    <h3>Changed in OmniFaces 4.4</h3>
    <ul>
        <li><os:githubLink issue="792" />The repackaged <code>ConcurrentLinkedHashMap</code>, used by <h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> and <h:link outcome="/components/cache"><code>&lt;o:cache&gt;</code></h:link> has been replaced by simpler LRU map implementation, the <code>org.omnifaces.util.cache.LruCache</code>, which should reduce the amount of unnecessary <code>AtomicReference</code> instances in heap</li>
    </ul>

    <h3>Fixed in OmniFaces 4.4</h3>
    <ul>
        <li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_3_14_5');return false;">Remaining fixes are same as in 3.14.5</a></li>
    </ul>

    <hr />

    <h2 id="4_3">What's new in OmniFaces 4.3?</h2>
    <p><em>Release date: 23 September, 2023</em></p>

    <h3>Added in OmniFaces 4.3</h3>
    <ul>
        <li><os:githubLink issue="769" /><h:link outcome="/taghandlers/importConstants"><code>&lt;o:importConstants&gt;</code></h:link> and <h:link outcome="/taghandlers/importFunctions"><code>&lt;o:importFunctions&gt;</code></h:link> got a new <code>loader</code> attribute where you can specify an object whose class loader will be used to load the class specified in the <code>type</code> attribute</li>
        <li><os:githubLink issue="769" />New <h:link outcome="/taghandlers/loadBundle"><code>&lt;o:loadBundle&gt;</code></h:link> tag which basically extends the <code>&lt;f:loadBundle&gt;</code> with a new <code>loader</code> attribute where you can specify an object whose class loader will be used to load the bundle, and whose <code>Locale</code> will be obtained with better default values than the default Faces implementation</li>
        <li><os:githubLink issue="772" />Added <h:link outcome="/utils/Faces"><code>Faces(Local)#isAuthenticated()</code></h:link> which checks if the current request has a remote user</li>
    </ul>

    <h3>Fixed in OmniFaces 4.3</h3>
    <ul>
        <li><os:githubLink issue="774" /><h:link outcome="/push/socket"><code>&lt;o:socket&gt;</code></h:link> failed to reconnect when connection is lost since 4.0 and threw <code>Unknown channel: undefined</code> because the JS -> TS migration was not done right in <code>Push.ts</code></li>
        <li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_3_14_4');return false;">Remaining fixes are same as in 3.14.4</a></li>
    </ul>

    <hr />

    <h2 id="4_2">What's new in OmniFaces 4.2?</h2>
    <p><em>Release date: 24 June, 2023</em></p>

    <h3>Added in OmniFaces 4.2</h3>
    <ul>
        <li><os:githubLink issue="736" /><h:link outcome="/resourcehandlers/PWAResourceHandler"><code>PWAResourceHandler</code></h:link> can now also be triggered via <code>manifest.webmanifest</code> which will eventually become the default over <code>manifest.json</code></li>
        <li><os:githubLink issue="740" />Added <h:link outcome="/utils/Components"><code>Components#getRenderedValue()</code></h:link> so that you can easily grab the to-be-rendered value of any <code>ValueHolder</code> component, particularly taking into account the internal state of any <code>UIInput</code> component, without the need to do all the checks if there's a submitted value or a local value or a converter etc</li>
        <li><os:githubLink issue="748" />Added <h:link outcome="/utils/Components"><code>Components#invalidateInputs()</code> and <code>Components#invalidateInput()</code></h:link> so that you can explicitly invalidate specific <code>UIInput</code> components by a relative client ID, e.g. when a specific DB constraint violation exception was thrown during a bean action</li>
        <li><os:githubLink issue="761" />Added <h:link outcome="/utils/MessagesLocal"><code>MessagesLocal</code></h:link> so that you can reuse any existing <code>FacesContext</code> instance without the need to get it from the <code>ThreadLocal</code> again and again</li>
    </ul>

    <h3>Changed in OmniFaces 4.2</h3>
    <ul>
        <li><os:githubLink issue="745" /><code>Utils#encodeURI()</code>, which is internally used by among others <h:link outcome="/functions/Strings"><code>\#{of:encodeURI()}</code></h:link>, <h:link outcome="/facesviews/ExtensionlessURLs"><code>FacesViews</code></h:link>, and <h:link outcome="/servlets/FileServlet"><code>FileServlet</code></h:link>, now uses RFC 3986 instead of RFC 2396</li>
        <li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('changed_3_14_3');return false;">Remaining changes are same as in 3.14.3</a></li>
    </ul>

    <h3>Fixed in OmniFaces 4.2</h3>
    <ul>
        <li><os:githubLink issue="755" /><h:link outcome="/components/highlight"><code>&lt;o:highlight&gt;</code></h:link> accidentally stopped working since 4.0 because it was overlooked in <code>OmniFaces.ts</code> during the JS -> TS migration</li>
        <li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_3_14_3');return false;">Remaining fixes are same as in 3.14.3</a></li>
    </ul>

    <hr />

    <h2 id="4_1">What's new in OmniFaces 4.1?</h2>
    <p><em>Release date: 26 February, 2023</em></p>

    <h3>Added in OmniFaces 4.1</h3>
    <ul>
        <li><os:githubLink issue="730" /><h:link outcome="/components/inputHidden"><code>&lt;o:inputHidden&gt;</code></h:link> has now a new <code>readonly</code> attribute, this will basically set the model value as submitted value during the decode and then run all the validators, but it won't update the model, this is very useful when you'd like to block the form submit by a validation error based on a server-controlled model value</li>
    </ul>

    <h3>Fixed in OmniFaces 4.1</h3>
    <ul>
        <li><os:githubLink issue="707" /><h:link outcome="/resourcehandlers/PWAResourceHandler"><code>sw.js</code></h:link> requests unnecessarily triggered creation, building and rendering of a second <code>UIViewRoot</code> of the associated view, including any view scoped beans</li>
        <li><os:githubLink issue="728" /><h:link outcome="/resourcehandlers/CombinedResourceHandler"><code>CombinedResourceHandler</code></h:link> failed to resolve resources when <code>jakarta.faces.AUTOMATIC_EXTENSIONLESS_MAPPING</code> was enabled</li>
        <li><os:githubLink issue="729" /><h:link outcome="/cdi/ViewScoped"><code>@ViewScoped</code></h:link> unload unnecessarily threw an exception in MyFaces 4.x due to impl changes in their side</li>
        <li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_3_14_2');return false;">Remaining fixes are same as in 3.14.2</a></li>
    </ul>

    <hr />

    <h2 id="4_0_1">What's new in OmniFaces 4.0.1?</h2>
    <p><em>Release date: 21 November, 2022</em></p>

    <h3>Fixed in OmniFaces 4.0.1</h3>
    <ul>
        <li><os:githubLink issue="715" /><h:link outcome="/managedbeans/now"><code>\#{now}</code></h:link> and <h:link outcome="/managedbeans/startup"><code>\#{startup}</code></h:link> weren't compatible with <h:link outcome="/functions/Dates"><code>of:xxx()</code></h:link> date functions</li>
        <li><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('fixed_3_14_1');return false;">Remaining fixes are same as in 3.14.1</a></li>
    </ul>

    <hr />

    <h2>What's new in OmniFaces 4.0?</h2>
    <p><em>Release date: 2 October, 2022</em></p>

    <h3>Major in OmniFaces 4.0</h3>
    <ul class="important">
        <li>Minimum dependencies are changed from Java 1.8, JSF 2.3, EL 3.0, Servlet 3.1, CDI 2.0, WS 1.1 and BV 2.0 to <strong>Java 11, Faces 3.0, EL 4.0, Servlet 5.0, CDI 3.0, WS 2.0 and BV 3.0</strong>;
            as of now, OmniFaces 4.0 is <strong>NOT</strong> backwards compatible with previous versions of these dependencies because of the compiler-incompatible rename of the <code>javax.*</code> package to <code>jakarta.*</code> package.
        </li>
        <li>All things which were during 3.x <code>@Deprecated</code> have been physically removed, 
            such as <code>&lt;o:form includeViewParams="true"&gt;</code> (has become the default behavior),
            <code>WebXml.INSTANCE</code> and <code>FacesConfigXML.INSTANCE</code> (replaced by <code>WebXml.instance()</code> and <code>FacesConfigXml.instance()</code>)
            and <h:link outcome="/scripts/FixViewState"><code>omnifaces:fixviewstate.js</code></h:link> (replaced by JSF 2.3 native fix)
        </li>
        <li><h:link outcome="/managedbeans/now"><code>\#{now}</code></h:link> and <h:link outcome="/managedbeans/startup"><code>\#{startup}</code></h:link> 
            will now return an instance of <code>java.time.temporal.Temporal</code> instead of <code>java.util.Date</code>;
            it still supports the <code>time</code> property as in <code>\#{now.time}</code> and <code>\#{startup.time}</code>;
            additionally, it's got two new convenience properties: <code>instant</code> and <code>zonedDateTime</code> as in <code>\#{now.instant}</code>, <code>\#{now.zonedDateTime}</code>, <code>\#{startup.instant}</code> and <code>\#{startup.zonedDateTime}</code>
        </li>
        <li><code>Callback</code> interfaces which dated from Java 1.7 and have replacements available in Java 1.8 are now <code>@Deprecated</code>.
            <code>Callback.Void</code> is replaced by <code>Runnable</code>, <code>Callback.Returning</code> is replaced by <code>Supplier</code>, <code>Callback.WithArgument</code> is replaced by <code>Consumer</code> and <code>Callback.ReturningWithArgument</code> is replaced by <code>Function</code>.
            Utility methods in <h:link outcome="/utils/Components"><code>Components</code></h:link> and <h:link outcome="/utils/Events"><code>Events</code></h:link> are have been adjusted.
        </li>
    </ul>

    <p><a href="#" onclick="PF('widget_versions').select(1);functions.scrollTo('3_14');return false;">OmniFaces 4.0 is basically the Jakartified version of OmniFaces 3.14 with the following changes:</a></p>

    <h3>Added in OmniFaces 4.0</h3>
    <ul>
        <li><os:githubLink issue="648" /><h:link outcome="/utils/Components"><code>Components#addFacesScriptResource()</code></h:link> which allows the component developer to automatically include either the Faces 4.0-specific <code>faces.js</code> or the JSF 2.3-specific <code>jsf.js</code> depending on whether the former is available as a resource in the current deployment</li>
        <li><os:githubLink issue="655" /><h:link outcome="/utils/Faces"><code>Faces#addResponseCookie()</code></h:link> got a new overload which allows adding custom attributes to the cookie such as <code>SameSite:None</code> (NOTE: works currently only when using minimally Mojarra 4.0.0-M2 on top of minimally Servlet 6.0.0-M1)</li>
    </ul>

    <h3>Changed in OmniFaces 4.0</h3>
    <ul>
        <li><os:githubLink issue="675" />All <code>&lt;h:outputScript library="omnifaces"&gt;</code> resources such as <code>omnifaces.js</code> were <a href="https://github.com/omnifaces/omnifaces/pull/675/commits/613ba49e802a6b34169f75a91cfeb7c8ae0c3553" target="_blank">migrated</a> from JavaScript to TypeScript</li>
    </ul>
</ui:composition>
