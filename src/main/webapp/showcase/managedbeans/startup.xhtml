<ui:composition template="/WEB-INF/templates/showcase.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="jakarta.faces.core"
	xmlns:h="jakarta.faces.html"
	xmlns:ui="jakarta.faces.facelets"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:of="http://omnifaces.org/functions"
>
	<ui:define name="meta">
		<f:metadata>
			<f:attribute name="api.path" value="cdi/config/DateProducer" />
		</f:metadata>
	</ui:define>

	<ui:define name="description">
		<p>
			The builtin managed bean <code>\#{startup}</code> returns you the 
			<a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/temporal/Temporal.html"><code>java.time.temporal.Temporal</code></a>
			instance representing the server's startup time in server's default time zone.
		</p>
		<p>
			The implementation is provided by <code>org.omnifaces.cdi.config.DateProducer.TemporalDate</code>
			which is essentially written as a CDI proxy for <code>java.time.ZonedDateTime</code> because it's a <code>final</code> class.
		</p>
        <p class="highlight">
            <strong>Historical notice:</strong> before OmniFaces 3.6, it returned since OmniFaces 1.0 an instance of <code>java.util.Date</code>
            via a <a href="https://github.com/omnifaces/omnifaces/blob/3.5/src/main/resources/META-INF/faces-config.xml#L58-L68" target="_blank"><code>&lt;managed-bean&gt;</code> entry in <code>faces-config.xml</code></a>.
        </p>
	</ui:define>		

	<ui:define name="demo">
		<p>
			Raw <code>Temporal#toString()</code> value of <code>\#{startup}</code>: <strong>#{startup}</strong> - this should represent same format as <code>java.time.ZonedDateTime</code>
		</p>
		<p>
			Formatted using <code>of:formatDate()</code> function: #{of:formatDate(startup, 'yyyy-MM-dd HH:mm:ss')}
		</p>
		<hr/>
		<p>
			As <code>java.time.Instant</code>: <strong>#{startup.instant}</strong> - this should represent UTC
		</p>
		<p>
			Formatted using <code>of:formatDate()</code> function: #{of:formatDate(startup.instant, 'yyyy-MM-dd HH:mm:ss')}
		</p>
		<hr/>
		<p>
			As <code>java.time.ZonedDateTime</code>: <strong>#{startup.zonedDateTime}</strong>
		</p>
		<p>
			Formatted using <code>of:formatDate()</code> function: #{of:formatDate(startup.zonedDateTime, 'yyyy-MM-dd HH:mm:ss')}
		</p>
		<hr/>
		<p>
			As <code>epoch time</code>: <strong>#{startup.time}</strong>
		</p>
	</ui:define>
</ui:composition>